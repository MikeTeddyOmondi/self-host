version: "3"

networks:
  proxy-net:
    external: true

volumes:
  config:
  storage:
  cache:
  database:

services:
  affine:
    image: ghcr.io/toeverything/affine-graphql:stable
    container_name: affine_selfhosted
    command:
      ["sh", "-c", "node ./scripts/self-host-predeploy && node ./dist/index.js"]
    networks:
      - default
      - proxy-net
    expose:
      - 3010
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      # custom configurations
      - config:/root/.affine/config
      # blob storage
      - storage:/root/.affine/storage
    restart: unless-stopped
    environment:
      - NODE_OPTIONS="--import=./scripts/register.js"
      - AFFINE_CONFIG_PATH=/root/.affine/config
      - REDIS_SERVER_HOST=redis
      - DATABASE_URL=postgres://affine:affine@postgres:5432/affine
      - NODE_ENV=production
      - AFFINE_ADMIN_EMAIL=YOUR_EMAIL_ADDRESS
      - AFFINE_ADMIN_PASSWORD=strong_password
      - AFFINE_SERVER_HOST=affine.example.com

      # only if you need multi users
      # - MAILER_HOST=smtp.gmail.com
      # - MAILER_SECURE=true
      # - MAILER_PORT=465
      # - MAILER_USER=YOUR_EMAIL_ADDRESS
      # - MAILER_SENDER=YOUR_EMAIL_ADDRESS
      # - MAILER_PASSWORD=app-password

  redis:
    image: redis
    container_name: affine_redis
    restart: unless-stopped
    volumes:
      - cache:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres
    container_name: affine_postgres
    restart: unless-stopped
    volumes:
      - database:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U affine"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: affine
      POSTGRES_PASSWORD: affine
      POSTGRES_DB: affine
      PGDATA: /var/lib/postgresql/data/pgdata
